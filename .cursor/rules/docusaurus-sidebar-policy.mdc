---
description: Permanent policy for autogenerated Docusaurus sidebars and category docs
alwaysApply: true
---

## Docusaurus Sidebar Policy

This repository follows a single, consistent sidebar pattern.

### Principles
- Always: sidebars are autogenerated.
- Always: every category links to a dedicated “category doc”.
- Always: items within each category are autogenerated from the filesystem.
- Always: each subfolder under `docs/` becomes a category with its own `link` to a doc.
- Always: the category doc must live in the same folder as the category to enable deduplication.
- Always: the category doc is not listed separately in the sidebar; it is accessible via the category link only.
- Default: categories are created with `"collapsed": true`.
- Prefer minimal, declarative configuration. Avoid hand-listing documents unless absolutely necessary.

### Required behavior
- Root sidebar configuration uses `autogenerated` at the root or per top-level folder; never hand-list nested items.
- Each category folder under `docs/` MUST contain a `_category_.json` with:
  - `"label"` for the category name
  - `"collapsed": true` unless explicitly opted out
  - `"link": { "type": "doc", "id": "<folder>/<doc-id>" }` pointing to a doc in the same folder, OR a generated index while the doc is being authored
- The category doc should introduce the scope of the folder and serve as the landing page.
- Do not add the category doc as a separate item anywhere in `sidebars.(ts|js)`.

### Acceptable patterns
- Fully autogenerated sidebar from `docs/`.
- Manual top-level ordering while each top-level entry is `autogenerated` for its folder.
- Within autogenerated categories, ordering can be influenced with document front matter `sidebar_position` when needed.

### Anti-patterns
- Listing individual docs inside categories in `sidebars.(ts|js)`.
- Linking a category to a doc outside of its folder.
- Duplicating the category doc both as the category link and as a separate sidebar item.

### Notes on deduplication
- Docusaurus will hide a doc from the category item list when it is referenced by the category’s `link`.
- This requires the linked doc’s `id` to resolve to a file in the same folder as the `_category_.json`.

